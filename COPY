import org.bytedeco.ffmpeg.global.avcodec;
import org.bytedeco.ffmpeg.global.avutil;
import org.bytedeco.ffmpeg.global.swresample;
import org.bytedeco.javacv.FFmpegFrameGrabber;
import org.bytedeco.javacv.FFmpegFrameRecorder;
import org.bytedeco.javacv.Frame;

import java.io.File;

public class Mp3ToWavConverter {

    public static void main(String[] args) {
        String inputMp3 = "path/to/input.mp3"; // Укажите путь к MP3-файлу
        String outputWav = "path/to/output.wav"; // Укажите путь для сохранения WAV

        try {
            convertMp3ToWav(inputMp3, outputWav);
            System.out.println("Конвертация завершена: " + outputWav);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void convertMp3ToWav(String inputPath, String outputPath) throws Exception {
        // Открываем MP3-файл
        FFmpegFrameGrabber grabber = new FFmpegFrameGrabber(inputPath);
        grabber.start();

        // Настройки аудиоформата для WAV
        FFmpegFrameRecorder recorder = new FFmpegFrameRecorder(outputPath, grabber.getAudioChannels());
        recorder.setSampleRate(grabber.getSampleRate());
        recorder.setAudioCodec(avcodec.AV_CODEC_ID_PCM_S16LE); // WAV-формат
        recorder.setFormat("wav");
        recorder.setAudioBitrate(grabber.getAudioBitrate());
        recorder.start();

        // Читаем и записываем аудиокадры
        Frame frame;
        while ((frame = grabber.grabFrame()) != null) {
            recorder.record(frame);
        }

        // Закрываем ресурсы
        recorder.stop();
        recorder.release();
        grabber.stop();
        grabber.release();
    }
}

